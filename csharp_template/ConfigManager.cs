// THIS FILE IS GENERATED BY THE TOOL, PLEASE DON'T EDIT

using System;
using System.Collections.Generic;
using System.Reflection;
using UnityEngine;
using SimpleJSON;

namespace Config
{left}
	public sealed class ConfigManager
	{left}
		/////////////////////////////////////////////////////////////////////////////////////////////////////////
		// config table fields{config_fields}

		// config table properties{config_properties}
		/////////////////////////////////////////////////////////////////////////////////////////////////////////

		// the path of directory of config files'
		const string kConfigFilesDirectory = "data/";

		private static ConfigManager s_instance = null;
		public static ConfigManager GetInstance()
		{left}
			if (s_instance == null) {left}
				s_instance = new ConfigManager();
				s_instance.Load();
			{right}	
			return s_instance;
		{right}

		public ConfigTable<T> Get<T>() where T : ConfigItem
		{left}
			return GetProperty<T>(GetPropertyName<T>());
		{right}	

		private void Load()
		{left}{load_data_from_json_files}
		{right}	

		private ConfigTable<T> GetProperty<T>(string propertyName) where T : ConfigItem
		{left}
			PropertyInfo propertyInfo = this.GetType().GetProperty(propertyName);
			if (propertyInfo != null) {left}
				return propertyInfo.GetValue(this, null) as ConfigTable<T>;
			{right}	
			return null;
		{right}	

		private string GetPropertyName<T>() where T : ConfigItem
		{left}
			Type t = typeof(T);
			string propertyName = t.Name;
			propertyName = propertyName.Substring(0, propertyName.Length - 4);
			propertyName = propertyName.Substring(6, propertyName.Length - 6);
			return propertyName;
		{right}	

		private void LoadFromFile<T>(string fileName) where T : ConfigItem
		{left}
			JSONNode node = GetJsonNodeFromFile(fileName);
			if (node != null) {left}
				Get<T>().ReadFromJson(node);
			{right}	
		{right}	

		private JSONNode GetJsonNodeFromFile(string jsonFileName)
		{left}
			TextAsset text = Resources.Load(kConfigFilesDirectory + jsonFileName) as TextAsset;
			return JSON.Parse(text.text);
		{right}	
	{right}	
{right}	
